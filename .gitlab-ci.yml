image: node:14-alpine

variables:
  DEPLOY_DIR: "email-service"
  PROD_DEPLOY_DIR: "nuban/nuban-generation"
  STAGING_DEPLOY_DIR: "email-service"
  STAGING_BRANCH: "dev"
  PRODUCTION_BRANCH: "production"
  DEPLOY_COMMAND: "pm2 restart  email"
  PROD_DEPLOY_COMMAND: "pm2 restart index.js"
  REPO: "gitlab.com/${CI_PROJECT_PATH}.git"

cache:
  paths:
    - node_modules/

stages:
  - build
  - deploy

build_job:
  stage: build
  image: node:14-alpine
  before_script:
    - npm install typescript
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/
      - package.json
      - package-lock.json
  only:
    - dev
    - production

prod_staging:
  stage: deploy
  image: alpine
  before_script:
    - apk update
    - apk add openssh-client rsync
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "StrictHostKeyChecking no" > ~/.ssh/config
    - eval $(ssh-agent -s)
    - echo "$PROD_SSH_PRIV_KEY_GITLAB" | tr -d '\r' | ssh-add -
  script:
    - ssh $PROD_USER@$PROD_IP "sudo mkdir -p /var/www/$PROD_DEPLOY_DIR"
    - rsync -avz ./dist/ $PROD_USER@$PROD_IP:/var/www/$PROD_DEPLOY_DIR
    - rsync -avz ./package.json ./package-lock.json $PROD_USER@$PROD_IP:/var/www/$PROD_DEPLOY_DIR
    - ssh $PROD_USER@$PROD_IP "cd /var/www/$PROD_DEPLOY_DIR && npm install --only=production"
    - ssh $PROD_USER@$PROD_IP "cd /var/www/$PROD_DEPLOY_DIR && pm2 start /var/www/$PROD_DEPLOY_DIR/index.js"
  only:
    - production
